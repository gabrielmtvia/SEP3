@page "/EditEmployee/{PageuserName}"
@using ModelClasses
@using BlazorClient.Services.RegisterService
<h3>EditEmployee</h3>



 @if (UserDtoToView != null)
 {
     <EditForm Context="myContext2"  Model="UserDtoToView" OnValidSubmit="@Update">
         
  

     <DataAnnotationsValidator/>
     <ValidationSummary/>

     <table class="changeSize" align="center" id="customers">
         <tr>
             <th>UserName:</th>
             <td><InputText type="text" id="form2Example1" class="form-control"  @bind-Value="UserDtoToView.userName"/> @userDto.userName </td>

         </tr>
         <tr>
             <th>FirstName:</th>
             <td><InputText type="text" id="form2Example1" class="form-control"@bind-Value="UserDtoToView.firstName"/> </td>
         </tr>
         <tr>
             <th>LastName:</th>
             <td><InputText type="text" id="form2Example1" class="form-control"@bind-Value="UserDtoToView.lastName"/> </td>
         </tr>
         <tr>
             <th>Address:</th>
             <td><InputText type="text" id="form2Example1" class="form-control"@bind-Value="UserDtoToView.address"/> </td>
         </tr>
         <tr>
             <th>Email:</th>
             <td><InputText type="text" id="form2Example1" class="form-control"@bind-Value="UserDtoToView.email"/> </td>
         </tr>
         <tr>
             <th>Phone:</th>
             <td><InputText type="text" id="form2Example1" class="form-control"  @bind-Value="UserDtoToView.phone"/> </td>
         </tr>
            <button type="submit" class="btn btn-primary  btn-block mb-4">Click Update</button>
     </table>
  </EditForm>
 }
@code {
        
    public UserDTO UserDtoToView;

    [Inject]
    public IRegisterService IRegisterService { get; set; }
    
    
    public UserDTO userDto = new();
    
    private string role = "Employee";
    
  
    
    [Parameter]
    public string? PageuserName { get; set; }
    
    
    
    public List<UserDTO> Employees { get; set; }
    
    public UserDTO GetUserAsync(string userName)
    {
        return Employees.Find(user => user.userName.Equals(userName));
        
    }

    protected override async Task OnInitializedAsync()
    {
        
        try
        {

            if (Employees == null)
            {
              
            }
            Employees = await IRegisterService.GetUsersByRole(role);
            UserDtoToView = GetUserAsync(PageuserName);


        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;

        }


    }

    public void Update()
    {
         Console.WriteLine(PageuserName);
        Console.WriteLine(UserDtoToView.userName);
      //  IRegisterService.update(userDto, userName);
      
        
       
    }

}